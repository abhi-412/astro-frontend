---
const props = Astro.props;

const {data} = props;

---
<div class="py-5 rounded-lg " id="accordion-collapse" data-accordion="collapse">
    {data?.map((item,i)=>{
      return <div>
        <h2 id={`accordion-collapse-heading-${i+1}`}>
      <button type="button" class="flex items-center justify-between w-full p-5 font-medium rtl:text-right text-gray-500 border  border-gray-200   gap-3" data-accordion-target={`accordion-collapse-body-${i+1}`} aria-expanded="false" aria-controls={`accordion-collapse-body-${i+1}`}>
        <span>{item.q}</span>
        <svg data-accordion-icon class="w-3 h-3 rotate-180 shrink-0" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 10 6">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5 5 1 1 5"/>
        </svg>
      </button>
    </h2>
    <div id={`accordion-collapse-body-${i+1}`} class="hidden" aria-labelledby={`accordion-collapse-heading-${i+1}`}>
      <div class="p-5 border border-b-0 border-gray-200 ">
        
            <p class="mb-2 text-gray-500 ">{item.a}</p>
      
        </div>
    </div>
        
        </div>
    })}

  </div>
  
  

  <script>
    document.addEventListener('DOMContentLoaded', function () {
      const accordionButtons = document.querySelectorAll('[data-accordion-target]');
      console.log(accordionButtons);
      accordionButtons.forEach(button => {
        button.addEventListener('click', function () {
          const attr = this.getAttribute('data-accordion-target');
          console.log(document.querySelector(`#${attr}`));
          const target = document.querySelector(`#${attr}`);
          const icon = this.querySelector('[data-accordion-icon]');
          if (target?.classList?.contains('hidden')) {
            target.classList.remove('hidden');
            icon.classList.add('rotate-180');
          } else {
            target.classList.add('hidden');
            icon.classList.remove('rotate-180');
          }
        });
      });
    });
  </script>
  
